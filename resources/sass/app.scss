/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 *
 * You can see the styles here:
 * https://github.com/tailwindcss/tailwindcss/blob/master/css/preflight.css
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/preflight";
 */
@tailwind preflight;

/**
 * This injects any component classes registered by plugins.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/components";
 */
@tailwind components;

/**
 * Here you would add any of your custom component classes; stuff that you'd
 * want loaded *before* the utilities so that the utilities could still
 * override them.
 *
 * Example:
 *
 * .btn { ... }
 * .form-input { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "components/buttons";
 * @import "components/forms";
 */

@import 'variables';
@import 'utilities/flex';
@import 'utilities/misc';
@import 'utilities/cards';
@import 'utilities/inputs';
@import 'utilities/grid';
@import 'typography';
//@import 'utilities/margins';
//@import 'utilities/paddings';
@import 'components/alerts';
@import 'components/horizontal-scroller';
//@import 'components/navigation';
//@import 'components/footer';
@import 'components/buttons';
@import 'components/modals';
@import 'components/pagination';
//@import 'components/lightbox';
@import 'components/inputs';
//@import 'components/tables';

.tag-item.all.active,
.tag-item.all:hover {
    background: $brand-primary;
    color: #ffffff;
}

.tag-item.php.active,
.tag-item.php:hover {
    background: #4F5B93;
}

.tag-item.php:hover {
    color: #ffffff;
}

.tag-item.javascript.active,
.tag-item.javascript:hover {
    background: #EFD844;
}

.tag-item.javascript:hover {
    color: #6a5921;
}

.tag-item.laravel.active,
.tag-item.laravel:hover {
   background: #e74430;
}

.tag-item.laravel:hover {
    color: #ffffff;
}

.tag-item.vue-js.active,
.tag-item.vue-js:hover {
    background: #4fc08d;
}

.tag-item.laravel:hover {
    color: #ffffff;
}

.tag-item.react-js.active,
.tag-item.react-js:hover {
    background: #61dafb;
}

.tag-item.react-js:hover {
    color: #3d6a82;
}

.tag-item.code-editor.active,
.tag-item.code-editor:hover {
    background: #1C2022;
}

.tag-item.code-editor:hover {
    color: #ffffff;
}

.tag-item.design.active,
.tag-item.design:hover {
    background: #5449D2;
}

.tag-item.design:hover {
    color: #ffffff;
}

.tag-item.css.active,
.tag-item.css:hover {
    background: #0770B3;
}

.tag-item.css:hover {
    color: #ffffff;
}

.tag-item.es6.active,
.tag-item.es6:hover{
    background: #F4C33B;
}

.tag-item.es6:hover {
    color: #ffffff;
}

.tag-item.ux.active,
.tag-item.ux:hover {
    background: #b03ac8;
}

.tag-item.ux:hover {
    color: #ffffff;
}

.tag-item.html.active,
.tag-item.html:hover {
    background: #DB4C2F;
}

.tag-item.html:hover {
    color: #ffffff;
}

.tag-item.browsers.active,
.tag-item.browsers:hover {
    background: #465f9e;
}

.tag-item.browsers:hover {
    color: #ffffff;
}

.tag-item.git.active,
.tag-item.git:hover {
    background: #E74E39;
}

.tag-item.git:hover {
    color: #ffffff;
}

.tag-item.cli.active,
.tag-item.cli:hover {
    background: #03262E;
}

.tag-item.cli:hover {
    color: #ffffff;
}

.tag-item.ember.active,
.tag-item.ember:hover {
    background: #DA4B37;
}

.tag-item.ember:hover {
    color: #ffffff;
}

@import 'base';

/**
 * This injects all of Tailwind's utility classes, generated based on your
 * config file.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/utilities";
 */
@tailwind utilities;

/**
 * Here you would add any custom utilities you need that don't come out of the
 * box with Tailwind.
 *
 * Example :
 *
 * .bg-pattern-graph-paper { ... }
 * .skew-45 { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "utilities/background-patterns";
 * @import "utilities/skew-transforms";
 */

@keyframes lum-fade {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

@keyframes lum-fadeZoom {
    0% {
        transform: scale(0.5);
        opacity: 0;
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes lum-loader-rotate {
    0% {
        transform: translate(-50%, -50%) rotate(0);
    }
    50% {
        transform: translate(-50%, -50%) rotate(-180deg);
    }
    100% {
        transform: translate(-50%, -50%) rotate(-360deg);
    }
}

@keyframes lum-loader-before {
    0% {
        transform: scale(1);
    }
    10% {
        transform: scale(1.2) translateX(6px);
    }
    25% {
        transform: scale(1.3) translateX(8px);
    }
    40% {
        transform: scale(1.2) translateX(6px);
    }
    50% {
        transform: scale(1);
    }
    60% {
        transform: scale(0.8) translateX(6px);
    }
    75% {
        transform: scale(0.7) translateX(8px);
    }
    90% {
        transform: scale(0.8) translateX(6px);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes lum-loader-after {
    0% {
        transform: scale(1);
    }
    10% {
        transform: scale(1.2) translateX(-6px);
    }
    25% {
        transform: scale(1.3) translateX(-8px);
    }
    40% {
        transform: scale(1.2) translateX(-6px);
    }
    50% {
        transform: scale(1);
    }
    60% {
        transform: scale(0.8) translateX(-6px);
    }
    75% {
        transform: scale(0.7) translateX(-8px);
    }
    90% {
        transform: scale(0.8) translateX(-6px);
    }
    100% {
        transform: scale(1);
    }
}

.lum-lightbox {
    background: rgba(0, 0, 0, 0.6);
}

.lum-lightbox-inner {
    top: 2.5%;
    right: 2.5%;
    bottom: 2.5%;
    left: 2.5%;
}

.lum-lightbox-inner img {
    position: relative;
}

.lum-lightbox-inner .lum-lightbox-caption {
    margin: 0 auto;
    color: #fff;
    max-width: 700px;
    text-align: center;
}

.lum-loading .lum-lightbox-loader {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 66px;
    height: 20px;
    animation: lum-loader-rotate 1800ms infinite linear;
}

.lum-lightbox-loader:before,
.lum-lightbox-loader:after {
    content: "";
    display: block;
    width: 20px;
    height: 20px;
    position: absolute;
    top: 50%;
    margin-top: -10px;
    border-radius: 20px;
    background: rgba(255, 255, 255, 0.9);
}

.lum-lightbox-loader:before {
    left: 0;
    animation: lum-loader-before 1800ms infinite linear;
}

.lum-lightbox-loader:after {
    right: 0;
    animation: lum-loader-after 1800ms infinite linear;
    animation-delay: -900ms;
}

.lum-lightbox.lum-opening {
    animation: lum-fade 180ms ease-out;
}

.lum-lightbox.lum-opening .lum-lightbox-inner {
    animation: lum-fadeZoom 180ms ease-out;
}

.lum-lightbox.lum-closing {
    animation: lum-fade 300ms ease-in;
    animation-direction: reverse;
}

.lum-lightbox.lum-closing .lum-lightbox-inner {
    animation: lum-fadeZoom 300ms ease-in;
    animation-direction: reverse;
}

.lum-img {
    transition: opacity 120ms ease-out;
}

.lum-loading .lum-img {
    opacity: 0;
}

.lum-gallery-button {
    overflow: hidden;
    text-indent: 150%;
    white-space: nowrap;
    background: transparent;
    border: 0;
    margin: 0;
    padding: 0;
    outline: 0;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    height: 100px;
    max-height: 100%;
    width: 60px;
    cursor: pointer;
}

.lum-close-button {
    position: absolute;
    right: 5px;
    top: 5px;
    width: 32px;
    height: 32px;
    opacity: 0.3;
}
.lum-close-button:hover {
    opacity: 1;
}
.lum-close-button:before,
.lum-close-button:after {
    position: absolute;
    left: 15px;
    content: " ";
    height: 33px;
    width: 2px;
    background-color: #fff;
}
.lum-close-button:before {
    transform: rotate(45deg);
}
.lum-close-button:after {
    transform: rotate(-45deg);
}

.lum-previous-button {
    left: 12px;
}

.lum-next-button {
    right: 12px;
}

.lum-gallery-button:after {
    content: "";
    display: block;
    position: absolute;
    top: 50%;
    width: 36px;
    height: 36px;
    border-top: 4px solid rgba(255, 255, 255, 0.8);
}

.lum-previous-button:after {
    transform: translateY(-50%) rotate(-45deg);
    border-left: 4px solid rgba(255, 255, 255, 0.8);
    box-shadow: -2px 0 rgba(0, 0, 0, 0.2);
    left: 12%;
    border-radius: 3px 0 0 0;
}

.lum-next-button:after {
    transform: translateY(-50%) rotate(45deg);
    border-right: 4px solid rgba(255, 255, 255, 0.8);
    box-shadow: 2px 0 rgba(0, 0, 0, 0.2);
    right: 12%;
    border-radius: 0 3px 0 0;
}

/* This media query makes screens less than 460px wide display in a "fullscreen"-esque mode. Users can then scroll around inside the lightbox to see the entire image. */
@media (max-width: 460px) {
    .lum-lightbox-image-wrapper {
        display: flex;
        overflow: auto;
        -webkit-overflow-scrolling: touch;
    }

    .lum-lightbox-caption {
        width: 100%;
        position: absolute;
        bottom: 0;
    }

    /* Used to centre the image in the container, respecting overflow: https://stackoverflow.com/a/33455342/515634 */
    .lum-lightbox-position-helper {
        margin: auto;
    }

    .lum-lightbox-inner img {
        max-width: none;
        max-height: none;
    }
}
